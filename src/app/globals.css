@tailwind base;
@tailwind components;
@tailwind utilities;

/* Enable View Transitions API for smooth page transitions */
@view-transition {
  navigation: auto;
}

/* Customize the view transition animation */
::view-transition-old(root),
::view-transition-new(root) {
  animation-duration: 0.2s;
}

::view-transition-old(root) {
  animation-name: fade-out;
}

::view-transition-new(root) {
  animation-name: fade-in;
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Remove autofill background color on all input fields */
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 600000s 0s, color 600000s 0s;
}

@layer base {
  :root {
    /* Core dimensions */
    --max-content-width: 448px;  /* Standard max-width for content */
    
    /* Core color palette - using hex for consistency */
    --background: transparent;  /* No background - let body::before handle it */
    --foreground: #ffffff;    /* White text for light theme */
    
    /* Primary colors */
    --primary: 122 39% 49%;     /* Brand green */
    --primary-foreground: 0 0% 100%;
    --primary-dark: 114 39% 42%;  /* Slightly darker for hover */
    --primary-light: 122 39% 90%; /* For subtle backgrounds */
    
    /* Secondary colors */
    --secondary: 114 25% 29%;    /* Darker green */
    --secondary-foreground: 0 0% 100%; 
    
    /* UI colors */
    --card: 0 0% 100%;
    --card-foreground: 215 28% 17%;
    --popover: 0 0% 100%;
    --popover-foreground: 215 28% 17%;
    
    /* State colors */
    --success: 142 76% 36%;     /* Green */
    --warning: 38 92% 50%;      /* Amber */
    --error: 0 84% 60%;         /* Red */
    --info: 199 89% 48%;        /* Blue */
    
    /* Muted colors */
    --muted: 210 20% 98%;
    --muted-foreground: 215 16% 47%;
    
    /* Border and input */
    --border: 214 32% 91%;
    --input: 214 32% 91%;
    --ring: 122 39% 49%;
    
    /* Shadows */
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    
    /* Border radius */
    --radius-sm: 0.375rem;
    --radius-md: 0.5rem;
    --radius-lg: 0.75rem;
    --radius-full: 9999px;
  }

  .dark {
    --background: transparent;
    --foreground: #ffffff;
    --card: #333333;
    --card-foreground: #ffffff;
    --popover: #333333;
    --popover-foreground: #ffffff;
    --primary: 122 39% 49%;
    --primary-foreground: 0 0% 100%;
    --secondary: 114 25% 29%;
    --secondary-foreground: 0 0% 100%;
    --muted: #666666;
    --muted-foreground: #ffffff;
    --accent: 142 25% 25%;
    --accent-foreground: 0 0% 100%;
    --destructive: 0 84% 60%;
    --destructive-foreground: #ffffff;
    --border: #666666;
    --input: #666666;
    --ring: 122 39% 49%;
  }
}

/* Base styles */
:root {
  color-scheme: light dark;
  color: var(--foreground);
  background-color: transparent; /* Allow body::before background to show through */
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

/* Reset and base styles */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  height: 100dvh;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
  scroll-behavior: smooth;
  /* Set a solid black background color as the base for the entire app. */
  background-color: #000;
   /* Allow overscroll on Y-axis for pull-to-refresh, but contain X-axis */
   overscroll-behavior-x: contain;
   overscroll-behavior-y: auto;
   /* Hide scrollbars but preserve scroll for pull-to-refresh */
   scrollbar-width: none; /* Firefox */
   -ms-overflow-style: none; /* IE and Edge */
}

body {
  min-height: 100dvh;
  font-family: var(--font-inter);
  color: hsl(var(--foreground));
  position: relative;
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Prevent overscroll bounce to avoid black areas */
  overscroll-behavior-y: none;
  overscroll-behavior-x: contain;
  
  /* Green geometric background pattern - always applied */
  background: #0a0f1a;
  background-image: 
    /* Green accent circles */
    radial-gradient(circle at 20% 30%, rgba(34, 197, 94, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 80% 70%, rgba(34, 197, 94, 0.15) 0%, transparent 40%),
    radial-gradient(circle at 60% 10%, rgba(34, 197, 94, 0.08) 0%, transparent 60%),
    radial-gradient(circle at 15% 80%, rgba(34, 197, 94, 0.12) 0%, transparent 45%),
    radial-gradient(circle at 90% 20%, rgba(34, 197, 94, 0.06) 0%, transparent 55%),
    /* Subtle connection lines pattern */
    repeating-linear-gradient(45deg, transparent 0px, transparent 120px, rgba(34, 197, 94, 0.03) 120px, rgba(34, 197, 94, 0.03) 122px),
    repeating-linear-gradient(-45deg, transparent 0px, transparent 140px, rgba(34, 197, 94, 0.02) 140px, rgba(34, 197, 94, 0.02) 142px);
  
  /* Smooth transitions for background changes */
  transition: background-image 0.3s ease-in-out, background-color 0.3s ease-in-out;
}

/* OLD: Removed overlay approach - now using pseudo-element layering */

/* Base pseudo-element - hidden by default */
body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  z-index: 1; /* Positive z-index, behind content but above body background */
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  pointer-events: none;
}

/* Custom background pseudo-element - layered over green pattern */
body.has-custom-background::before {
  background-image: var(--custom-background-image);
  opacity: 1 !important; /* Override the default opacity: 0 */
  display: block !important;
  pointer-events: none !important;
}




/* Fixed background that covers safe areas including notch */
.safe-area-background {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  /* Extend into safe areas */
  margin-top: calc(-1 * env(safe-area-inset-top));
  margin-bottom: calc(-1 * env(safe-area-inset-bottom));
  margin-left: calc(-1 * env(safe-area-inset-left));
  margin-right: calc(-1 * env(safe-area-inset-right));
  /* Background will be set via inline styles */
}

  /* iOS specific fixes */
@supports (-webkit-touch-callout: none) {
  /* Fix background-attachment: fixed on iOS by disabling it */
  html {
    background-attachment: scroll !important;
  }
  
  /* Ensure full height coverage and prevent overscroll */
  html, body {
    height: 100dvh;
    min-height: 100dvh;
    overscroll-behavior-y: none;
    overscroll-behavior-x: contain;
  }
  /* Prevent zoom on input focus in iOS < 13 */
  input[type='color'],
  input[type='date'],
  input[type='datetime'],
  input[type='datetime-local'],
  input[type='email'],
  input[type='month'],
  input[type='number'],
  input[type='password'],
  input[type='search'],
  input[type='tel'],
  input[type='text'],
  input[type='time'],
  input[type='url'],
  input[type='week'],
  textarea,
  select,
  [contenteditable] {
    font-size: 1rem;
  }

  /* Prevent Safari's yellow autofill background */
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus,
  input:-webkit-autofill:active {
    -webkit-box-shadow: 0 0 0 30px transparent inset !important;
    -webkit-text-fill-color: inherit !important;
    background-color: transparent !important;
    background-image: none !important;
    transition: background-color 5000s ease-in-out 0s;
  }

  /* Specific fix for phone input fields */
  input[type="tel"]:-webkit-autofill,
  input[inputmode="tel"]:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 30px transparent inset !important;
    -webkit-text-fill-color: black !important;
    background-color: transparent !important;
  }
}

/* Form elements reset */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: var(--radius-md);
  appearance: none;
}

/* Focus styles for keyboard navigation */
:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
  border-radius: var(--radius-sm);
}

/* Remove default focus styles for mouse users */
:focus:not(:focus-visible) {
  outline: none;
}

/* Card component */
@layer components {
  .card {
    @apply rounded-2xl p-6 transition-all duration-200;
    background-color: hsl(var(--card));
    color: hsl(var(--card-foreground));
    border: 1px solid hsl(var(--border));
    box-shadow: var(--shadow-md);
  }
  
  .card:hover {
    box-shadow: var(--shadow-lg);
    transform: translateY(-1px);
  }
  
  
  /* Form elements */
  input, textarea, select {
    @apply p-3 w-full outline-none transition-all rounded-full;
    background-color: hsl(var(--card));
    border: 1px solid hsl(var(--border));
    color: var(--foreground);
  }
  
  input:focus, textarea:focus, select:focus {
    border-color: var(--primary);
    box-shadow: 0 0 0 2px var(--primary-light);
  }
  
  /* Animations */
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @keyframes fadeInBackground {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
}


/* vCard Modal Styles */
.vcard-modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0,0,0,0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10000;
  padding: 20px;
}

.vcard-modal-content {
  background: white;
  padding: 30px;
  border-radius: 12px;
  max-width: 400px;
  text-align: center;
  box-shadow: 0 4px 20px rgba(0,0,0,0.3);
}

.vcard-modal h3 {
  margin: 0 0 20px 0;
  color: #333;
}

.vcard-modal p {
  margin: 0 0 20px 0;
  color: #666;
  line-height: 1.5;
}

.vcard-modal ol {
  text-align: left;
  color: #666;
  margin: 0 0 20px 0;
  padding-left: 20px;
}

.vcard-modal textarea {
  width: 100%;
  height: 120px;
  margin: 10px 0;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 6px;
  font-family: monospace;
  font-size: 12px;
  background: #f9f9f9;
}

.vcard-modal-buttons {
  margin-top: 20px;
}

.vcard-modal-btn {
  border: none;
  padding: 10px 20px;
  border-radius: 6px;
  cursor: pointer;
  margin-right: 10px;
}

.vcard-modal-btn.copy {
  background: #007AFF;
  color: white;
}

.vcard-modal-btn.close {
  background: #666;
  color: white;
}

/* ============================================================================ */
/* CalConnect Gradient Utilities (adapted to Nekt's teal/green theme)          */
/* ============================================================================ */

:root {
  /* Update to use Nekt's gradient colors (teal/green theme) */
  --icon-gradient: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%); /* light green gradient */
}

/* Utility classes for gradient elements */
.gradient-icon {
  background: var(--icon-gradient);
}

/* Gradient text utilities */
.gradient-text {
  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary-dark)) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Gradient border utilities for focus states */
.gradient-border-focus-within {
  position: relative;
}

.gradient-border-focus-within > * {
  position: relative;
  z-index: 2;
}

.gradient-border-focus-within:focus-within {
  border-color: transparent;
  outline: none;
}

.gradient-border-focus-within:focus-within::after {
  content: '';
  position: absolute;
  inset: 2px;
  border-radius: calc(0.5rem - 2px);
  background: white;
  z-index: 1;
}

.gradient-border-focus-within:focus-within::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary-dark)) 100%);
  border-radius: 0.5rem;
  z-index: 0;
}

/* ============================================================================ */
/* Bump-to-Match Animations                                                     */
/* ============================================================================ */

/* Floating animation - gentle breathing motion while waiting for bump */
@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-8px);
  }
}

/* Wind-up animation - compress and wobble when bump detected */
@keyframes windUp {
  0% {
    transform: scale(1) rotate(0deg);
  }
  30% {
    transform: scale(0.95) rotate(-1deg);
  }
  60% {
    transform: scale(0.95) rotate(1deg);
  }
  100% {
    transform: scale(0.96) rotate(0deg);
  }
}

/* Float down - smooth return to position when cancelled/timeout */
@keyframes floatDown {
  0% {
    transform: translateY(-8px);
  }
  100% {
    transform: translateY(0);
  }
}

/* Profile exit - shoots up while shrinking */
@keyframes profileExit {
  0% {
    transform: translateY(0) scale(0.96) rotate(0deg);
    opacity: 1;
    filter: blur(0);
  }
  100% {
    transform: translateY(-200px) scale(0.6);
    opacity: 0;
    filter: blur(16px);
  }
}

/* Contact enter - slides down while growing */
@keyframes contactEnter {
  0% {
    transform: translateY(-200px) scale(0.6);
    opacity: 0;
    filter: blur(16px);
  }
  100% {
    transform: translateY(0) scale(1);
    opacity: 1;
    filter: blur(0);
  }
}

/* Fade blur out - for buttons and top UI elements */
@keyframes fadeBlurOut {
  0% {
    transform: translateY(0);
    opacity: 1;
    filter: blur(0);
  }
  100% {
    transform: translateY(-40px);
    opacity: 0;
    filter: blur(4px);
  }
}

/* Button fade out - for Nekt button */
@keyframes buttonFadeOut {
  0% {
    transform: scale(1);
    opacity: 1;
    filter: blur(0);
  }
  100% {
    transform: scale(0.8);
    opacity: 0;
    filter: blur(4px);
  }
}

/* Fade in up - for contact buttons (synchronized finish at 1000ms) */
@keyframes fadeInUp {
  0% {
    transform: translateY(10px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Crossfade exit - smooth fade out for navigation */
@keyframes crossfadeExit {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* Crossfade enter - smooth fade in for navigation */
@keyframes crossfadeEnter {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/* Subtle pulse - for top buttons during wind-up */
@keyframes subtlePulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

/* Animation utility classes */
.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-wind-up {
  animation: windUp 300ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-float-down {
  animation: floatDown 300ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-profile-exit {
  animation: profileExit 500ms cubic-bezier(0.4, 0, 1, 1) forwards;
}

.animate-contact-enter {
  animation: contactEnter 500ms cubic-bezier(0, 0, 0.2, 1) forwards;
}

.animate-fade-blur-out {
  animation: fadeBlurOut 350ms cubic-bezier(0.4, 0, 1, 1) forwards;
}

.animate-button-fade-out {
  animation: buttonFadeOut 300ms cubic-bezier(0.4, 0, 1, 1) forwards;
}

.animate-fade-in-up {
  animation: fadeInUp 200ms cubic-bezier(0, 0, 0.2, 1) forwards;
}

.animate-crossfade-exit {
  animation: crossfadeExit 300ms ease-out forwards;
}

.animate-crossfade-enter {
  animation: crossfadeEnter 300ms ease-in forwards;
}

/* Respect reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
  .animate-float,
  .animate-wind-up,
  .animate-float-down,
  .animate-profile-exit,
  .animate-contact-enter,
  .animate-fade-blur-out,
  .animate-button-fade-out,
  .animate-fade-in-up,
  .animate-crossfade-exit,
  .animate-crossfade-enter {
    animation: none;
    transition: opacity 0.2s ease;
  }
}

/* ============================================================================ */
/* Standardized Button & Modal Animations                                      */
/* ============================================================================ */

/* Modal entrance - bounce in from center */
@keyframes modalEnter {
  0% {
    transform: scale(0.9);
    opacity: 0;
  }
  70% {
    transform: scale(1.02);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Modal exit - scale down and fade */
@keyframes modalExit {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0.95);
    opacity: 0;
  }
}

/* Modal backdrop entrance */
@keyframes backdropEnter {
  0% {
    opacity: 0;
    backdrop-filter: blur(0px);
  }
  100% {
    opacity: 1;
    backdrop-filter: blur(8px);
  }
}

/* Standardized button animations */
button {
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;
}

.button-release {
  transform: scale(1);
  filter: brightness(1);
  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
              filter 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.button-release:active {
  transform: scale(0.96);
  filter: brightness(1.1);
  transition: transform 0.1s cubic-bezier(0.4, 0, 0.2, 1),
              filter 0.1s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Animation utility classes for modals */
.animate-modal-enter {
  animation: modalEnter 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
}

.animate-modal-exit {
  animation: modalExit 0.2s ease-in forwards;
}

.animate-backdrop-enter {
  animation: backdropEnter 0.3s ease forwards;
}

/* Respect reduced motion for new animations */
@media (prefers-reduced-motion: reduce) {
  .animate-modal-enter,
  .animate-modal-exit,
  .animate-backdrop-enter {
    animation: none;
    transition: opacity 0.2s ease;
  }

  .button-press,
  .button-release {
    transform: none;
    filter: none;
    transition: none;
  }
}
