@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Core dimensions */
    --max-content-width: 448px;  /* Standard max-width for content */
    
    /* Core color palette - using hex for consistency */
    --background: transparent;  /* No background - let body::before handle it */
    --foreground: #ffffff;    /* White text for light theme */
    
    /* Primary colors */
    --primary: 122 39% 49%;     /* Brand green */
    --primary-foreground: 0 0% 100%;
    --primary-dark: 114 39% 42%;  /* Slightly darker for hover */
    --primary-light: 122 39% 90%; /* For subtle backgrounds */
    
    /* Secondary colors */
    --secondary: 114 25% 29%;    /* Darker green */
    --secondary-foreground: 0 0% 100%; 
    
    /* UI colors */
    --card: 0 0% 100%;
    --card-foreground: 215 28% 17%;
    --popover: 0 0% 100%;
    --popover-foreground: 215 28% 17%;
    
    /* State colors */
    --success: 142 76% 36%;     /* Green */
    --warning: 38 92% 50%;      /* Amber */
    --error: 0 84% 60%;         /* Red */
    --info: 199 89% 48%;        /* Blue */
    
    /* Muted colors */
    --muted: 210 20% 98%;
    --muted-foreground: 215 16% 47%;
    
    /* Border and input */
    --border: 214 32% 91%;
    --input: 214 32% 91%;
    --ring: 122 39% 49%;
    
    /* Shadows */
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    
    /* Border radius */
    --radius-sm: 0.375rem;
    --radius-md: 0.5rem;
    --radius-lg: 0.75rem;
    --radius-full: 9999px;
  }

  .dark {
    --background: transparent;
    --foreground: #ffffff;
    --card: #333333;
    --card-foreground: #ffffff;
    --popover: #333333;
    --popover-foreground: #ffffff;
    --primary: 122 39% 49%;
    --primary-foreground: 0 0% 100%;
    --secondary: 114 25% 29%;
    --secondary-foreground: 0 0% 100%;
    --muted: #666666;
    --muted-foreground: #ffffff;
    --accent: 142 25% 25%;
    --accent-foreground: 0 0% 100%;
    --destructive: 0 84% 60%;
    --destructive-foreground: #ffffff;
    --border: #666666;
    --input: #666666;
    --ring: 122 39% 49%;
  }
}

/* Base styles */
:root {
  color-scheme: light dark;
  color: var(--foreground);
  background-color: transparent; /* Allow body::before background to show through */
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

/* Reset and base styles */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  height: 100vh;
  height: 100dvh;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
  scroll-behavior: smooth;
  /* Shorthand: background image from CSS var or fallback black */
  background: var(--initial-bg, black) center top / cover no-repeat;
   /* Allow overscroll on Y-axis for pull-to-refresh, but contain X-axis */
   overscroll-behavior-x: contain;
   overscroll-behavior-y: auto;
   /* Hide scrollbars but preserve scroll for pull-to-refresh */
   scrollbar-width: none; /* Firefox */
   -ms-overflow-style: none; /* IE and Edge */
}

body {
  margin: 0;
  padding: 0;
  /* New viewport units that track the dynamic viewport */
  min-height: 100dvh;
  /* Enable vertical overscroll for pull-to-refresh, no horizontal scroll */
  overflow-y: overlay;
  overscroll-behavior: contain;
  /* Respect the "ears" on iOS / Dynamic Island */
  padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
  /* Smooth overscroll without accidental lateral scroll */
  overscroll-behavior-x: contain;
  overscroll-behavior-y: auto;
  /* No background color on body - let html and body::before handle it */
  background-color: transparent;
  line-height: 1.6;
  font-family: 'Inter', system-ui, -apple-system, sans-serif;
  color: var(--foreground);
}

/* PWA-standard full-bleed background using pseudo-element */
body::before {
  content: '';
  position: fixed;
  top: -100vh;
  left: 0;
  width: 100vw;
  height: 300vh;
  background-attachment: fixed;
  z-index: -1;
  pointer-events: none;
  /* Fallback to match html background var */
  background-color: var(--initial-bg, black);
  /* The background image will be set dynamically via the useBodyBackgroundImage hook */
  background-size: cover;
  background-position: center top;
  background-repeat: no-repeat;
  /* removed transform to allow fixed background during pull-to-refresh */
}

/* Viewport lock states - Container-based approach */
body.viewport-locked.no-refresh {
  overflow: hidden;
  height: 100vh;
  height: 100dvh;
  touch-action: none;
  overscroll-behavior: none;
}

/* For pull-to-refresh enabled, constrain content containers instead of body */
body.viewport-locked:not(.no-refresh) {
  /* Allow normal scroll behavior on body for pull-to-refresh */
  overflow-y: auto;
  overscroll-behavior-y: auto;
  /* Hide scrollbars for clean look */
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

body.viewport-locked:not(.no-refresh)::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

body.allow-scroll {
  overflow: auto;
  height: auto;
  touch-action: auto;
  overscroll-behavior: auto;
}

/* Helper class for containers that need to be locked */
.viewport-container-locked {
  height: 100vh;
  height: 100dvh;
  overflow: hidden;
  position: relative;
}

/* Full-viewport container allowing pull-to-refresh bounce without scrollbars */
.page-container {
  height: 100vh;
  height: 100dvh;
  width: 100%;
  overflow-y: auto;
  overscroll-behavior-y: auto;
  overflow-x: hidden;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

/* When keyboard is up, reduce height to prevent scrolling past background */
@media screen and (max-height: 600px) {
  .page-container {
    height: 70vh;
    height: 70dvh;
    overflow: hidden; /* Prevent scrolling when keyboard is up */
  }
  
  /* Also constrain any inner containers */
  .page-container > div {
    height: 70vh !important;
    height: 70dvh !important;
    overflow: hidden !important;
  }
}

.page-container::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

/* Content container that respects safe areas and prevents scrollbars */
.safe-content-container {
  height: 100vh;
  height: 100dvh;
  overflow-y: auto;
  overflow-x: hidden;
  /* Account for safe area padding that's already on body */
  margin: calc(-1 * env(safe-area-inset-top)) calc(-1 * env(safe-area-inset-right)) calc(-1 * env(safe-area-inset-bottom)) calc(-1 * env(safe-area-inset-left));
  padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
  /* Hide scrollbars for clean look */
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

.safe-content-container::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

/* Fixed background that covers safe areas including notch */
.safe-area-background {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  /* Extend into safe areas */
  margin-top: calc(-1 * env(safe-area-inset-top));
  margin-bottom: calc(-1 * env(safe-area-inset-bottom));
  margin-left: calc(-1 * env(safe-area-inset-left));
  margin-right: calc(-1 * env(safe-area-inset-right));
  /* Background will be set via inline styles */
}

/* iOS specific fixes */
@supports (-webkit-touch-callout: none) {
  /* Prevent zoom on input focus in iOS < 13 */
  input[type='color'],
  input[type='date'],
  input[type='datetime'],
  input[type='datetime-local'],
  input[type='email'],
  input[type='month'],
  input[type='number'],
  input[type='password'],
  input[type='search'],
  input[type='tel'],
  input[type='text'],
  input[type='time'],
  input[type='url'],
  input[type='week'],
  textarea,
  select,
  [contenteditable] {
    font-size: 1rem;
  }

  /* Prevent Safari's yellow autofill background */
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus,
  input:-webkit-autofill:active {
    -webkit-box-shadow: 0 0 0 30px transparent inset !important;
    -webkit-text-fill-color: inherit !important;
    background-color: transparent !important;
    background-image: none !important;
    transition: background-color 5000s ease-in-out 0s;
  }

  /* Specific fix for phone input fields */
  input[type="tel"]:-webkit-autofill,
  input[inputmode="tel"]:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 30px transparent inset !important;
    -webkit-text-fill-color: black !important;
    background-color: transparent !important;
  }
}

/* Form elements reset */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: var(--radius-md);
  appearance: none;
}

/* Focus styles for keyboard navigation */
:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
  border-radius: var(--radius-sm);
}

/* Remove default focus styles for mouse users */
:focus:not(:focus-visible) {
  outline: none;
}

/* Card component */
@layer components {
  .card {
    @apply rounded-lg p-6 transition-all duration-200;
    background-color: hsl(var(--card));
    color: hsl(var(--card-foreground));
    border: 1px solid hsl(var(--border));
    box-shadow: var(--shadow-md);
  }
  
  .card:hover {
    box-shadow: var(--shadow-lg);
    transform: translateY(-1px);
  }
  
  .btn-primary {
    @apply font-medium py-3 px-6 rounded-full transition-all duration-200 
           flex items-center justify-center gap-2;
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    box-shadow: var(--shadow-sm);
  }
  
  .btn-primary:hover {
    background-color: hsl(var(--primary-dark));
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }
  
  .btn-secondary {
    @apply font-medium py-3 px-6 rounded-full transition-all duration-200 flex items-center justify-center;
    background-color: transparent;
    color: var(--primary);
    border: 1px solid var(--primary);
  }
  
  .btn-secondary:hover {
    background-color: var(--primary-light);
    color: white;
  }
  
  .social-icon {
    @apply w-10 h-10 rounded-full flex items-center justify-center transition-all duration-200;
    background-color: var(--primary-light);
    color: var(--card-bg);
  }
  
  .social-icon:hover {
    background-color: var(--primary);
    transform: scale(1.05);
  }
  
  .profile-card {
    @apply flex flex-col items-center py-6 rounded-xl mb-6;
    background-color: var(--card-bg);
    border: 1px solid var(--card-border);
    box-shadow: var(--shadow-md);
  }
  
  .nekt-button {
    @apply font-bold py-3 px-6 rounded-full flex items-center justify-center gap-2 transition-all duration-200;
    background-color: var(--primary);
    color: white;
    box-shadow: var(--shadow-sm);
  }
  
  .nekt-button:hover {
    background-color: var(--primary-dark);
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }
  
  /* Form elements */
  input, textarea, select {
    @apply p-3 w-full outline-none transition-all rounded-md;
    background-color: var(--card-bg);
    border: 1px solid var(--card-border);
    color: var(--foreground);
  }
  
  input:focus, textarea:focus, select:focus {
    border-color: var(--primary);
    box-shadow: 0 0 0 2px var(--primary-light);
  }
  
  /* Loading spinner */
  .spinner {
    @apply relative;
  }
  
  .spinner div:first-child {
    border-color: var(--background-secondary);
  }
  
  .spinner div:last-child {
    border-top-color: var(--primary);
    animation: spin 1s linear infinite;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  /* Animations */
  .animate-fade-in {
    animation: fadeIn 0.3s ease-out forwards;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  /* Google sign-in button with no shadow */
  .google-signin-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    background-color: white;
    color: #333;
    font-size: 18px;
    font-weight: 500;
    padding: 14px 24px;
    border-radius: 100px;
    transition: background-color 0.2s ease-in-out;
    text-decoration: none;
    text-align: center;
    border: 1px solid #ddd;
    cursor: pointer;
    margin-top: 16px;
    margin-bottom: 24px;
    box-shadow: none !important;
    -webkit-box-shadow: none !important;
    -moz-box-shadow: none !important;
    filter: none !important;
  }
  
  .google-signin-button:hover {
    background-color: #eeeeee;
    box-shadow: none !important;
    -webkit-box-shadow: none !important;
    -moz-box-shadow: none !important;
    filter: none !important;
    transform: none !important;
  }
}

/* Utility class to hide scrollbars while maintaining scroll functionality */
.scrollbar-hide {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

.scrollbar-hide::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

/* Pull-to-refresh container: full viewport height, native bounce, hide scroll indicators */
.pull-container {
  height: 100dvh;
  width: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  overscroll-behavior-y: contain;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

.pull-container::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

/* Setup page container to account for keyboard */
.setup-page-container {
  height: 80vh; /* Reduced height to account for keyboard */
  height: 80dvh;
  width: 100%;
  overflow: hidden; /* Prevent scrolling when keyboard is up */
  overscroll-behavior-y: auto; /* Still allow pull-to-refresh */
  overflow-x: hidden;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

.setup-page-container::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}
