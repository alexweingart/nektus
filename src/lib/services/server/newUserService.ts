import { Session } from 'next-auth';
import { UserProfile, ContactEntry } from '@/types/profile';

/**
 * New User Service
 * Handles detection and orchestration of new user onboarding flow
 */

interface CreateDefaultProfileParams {
  session: Session;
}

interface DefaultProfileResult {
  profile: UserProfile;
  isNewUser: boolean;
}

/**
 * Detects if this is a new user based on session flags
 */
export function isNewUser(session: Session | null): boolean {
  if (!session?.user) return false;
  
  // Check NextAuth's new user flag (set during first sign-in)
  return (session as { isNewUser?: boolean }).isNewUser === true;
}


/**
 * Creates a default profile for new users with auto-generated social media
 */
export function createDefaultProfile({ session }: CreateDefaultProfileParams): DefaultProfileResult {
  if (!session?.user) {
    throw new Error('Session required to create default profile');
  }

  const contactEntries: ContactEntry[] = [];
  
  // Add name if available
  if (session.user.name) {
    contactEntries.push({
      fieldType: 'name',
      value: session.user.name,
      section: 'universal',
      order: -2,
      isVisible: true,
      confirmed: true
    });
  }
  
  // Add email if available
  if (session.user.email) {
    contactEntries.push({
      fieldType: 'email',
      value: session.user.email,
      section: 'universal',
      order: 1,
      isVisible: true,
      confirmed: !!session.user.email
    });
  }

  const profile: UserProfile = {
    userId: session.user.id || '',
    profileImage: session.user.image || '',
    backgroundImage: '', // Will be generated by AI service
    lastUpdated: Date.now(),
    contactEntries
    // Removed aiGeneration field - should not be saved to Firestore
  };

  return {
    profile,
    isNewUser: true
  };
}

